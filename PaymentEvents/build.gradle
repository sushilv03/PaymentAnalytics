apply plugin: 'com.android.library'
apply plugin: "maven"


def getSdkVersion = { ->
    def stdout = new ByteArrayOutputStream()
    stdout = System.env.BUILD_SDK_VERSION ? System.env.BUILD_SDK_VERSION : "1.0.0-SNAPSHOT"
    return stdout
}

android {
    compileSdkVersion 26
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/res']
            aidl.srcDirs = ['src/main/java']
            renderscript.srcDirs = ['src/main/']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }
    }
    buildTypes {
        dev {
            minifyEnabled false
            // Run code coverage reports by default on debug builds.
            testCoverageEnabled = true
            zipAlignEnabled true
        }
        debug {
            minifyEnabled false
            // Run code coverage reports by default on debug builds.
            testCoverageEnabled = true
            zipAlignEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
        }
    }
    productFlavors {
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
        exclude 'DEPENDENCIES.txt'
        exclude 'DEPENDENCIES'
        exclude 'dependencies.txt'
        exclude 'LICENSE.txt'
        exclude 'LICENSE'
        exclude 'license.txt'
        exclude 'LGPL2.1'
        exclude 'NOTICE.txt'
        exclude 'NOTICE'
        exclude 'notice.txt'
    }
    lintOptions {
        abortOnError false
    }
}

def coreAarFile = file('build/outputs/aar/PaymentEvents.aar')
artifacts {
    archives coreAarFile
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: 'https://nexus.poynt.com/content/repositories/releases') {
                authentication(userName: mavenUser, password: mavenPassword)
            }
            snapshotRepository(url: 'https://nexus.poynt.com/content/repositories/snapshots') {
                authentication(userName: mavenUser, password: mavenPassword)
            }
            pom.groupId = 'co.poynt.android'
            pom.artifactId = 'PaymentEvents'
            pom.version = getSdkVersion()
        }
    }
}

configurations.all {
    // check for updates every build (gradle checks for updates every 24 hours)
    // Source: http://forums.gradle.org/gradle/topics/how_to_get_gradle_to_download_newer_snapshots_to_gradle_cache_when_using_an_ivy_repository
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}


// custom task to install locally
task installArchives(type: Upload) {
    description "Installs the artifacts to the local Maven repository."
    configuration = configurations['archives']
    repositories {
        mavenDeployer {
            repository url: "file://${System.properties['user.home']}/.m2/repository"
            pom.groupId = 'co.poynt.android'
            pom.artifactId = 'PaymentEvents'
            pom.version = 'development-SNAPSHOT'
        }
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url 'https://nexus.poynt.com/content/repositories/snapshots'
        credentials {
            username mavenUser
            password mavenPassword
        }
    }
    maven {
        url 'https://nexus.poynt.com/content/repositories/releases'
        credentials {
            username mavenUser
            password mavenPassword
        }
    }
    jcenter()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:26.1.0'

    //RX
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.2'
    implementation 'android.arch.persistence.room:rxjava2:1.0.0'

    implementation 'com.google.code.gson:gson:2.6.2'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

